# ---- Stage 1: Builder ----
# This stage installs dependencies, generates the Prisma client, and compiles the TypeScript code.
FROM node:20-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package.json and lock file to leverage Docker cache
COPY package*.json ./

# Install all dependencies (including devDependencies for building)
RUN npm install

# Copy the rest of your application source code
COPY . .

# Compile TypeScript to JavaScript. The output will be in the 'dist' folder.
RUN npm run build


# ---- Stage 2: Production ----
# This stage creates the final, lightweight image with only production dependencies and compiled code.
FROM node:20-alpine

WORKDIR /app

# Copy package.json and lock file again
COPY package*.json ./

# Install ONLY production dependencies
RUN npm install --production

# Copy the compiled code from the builder stage
COPY --from=builder /app/dist ./dist

# Expose the port your application will run on
EXPOSE 3000

# Command to run the application (Updated to match your entry point)
CMD ["node", "dist/server.js"]